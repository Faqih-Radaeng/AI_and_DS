{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"gpuType":"T4","mount_file_id":"1cyEYFrDac2jpAHyMnYwS_7S4fk28lNTv","authorship_tag":"ABX9TyNvUDiVZQkVqv9McE1vJJY5"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","source":["from pathlib import Path\n","import shutil\n","\n","dirpath = Path('') / 'Retinal_Disease'\n","dirpathzip = Path('') / 'Retinal_Disease.zip'\n","if dirpath.exists() and dirpath.is_dir():\n","    shutil.rmtree(dirpath)\n","    print('delete folder : Retinal_Disease')\n","    !rm Retinal_Disease.zip\n","    print('delete file : Retinal_Disease.zip')"],"metadata":{"id":"-SBSVw-1jko3"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JEoGqTT9iopa","executionInfo":{"status":"ok","timestamp":1695456542921,"user_tz":-420,"elapsed":602,"user":{"displayName":"002 ฟากิฮ ราแดง","userId":"15758045503554527751"}},"outputId":"5f083d66-971d-4de7-ca08-ab3278e8e143"},"outputs":[{"output_type":"stream","name":"stdout","text":["Access denied with the following error:\n","\n"," \tToo many users have viewed or downloaded this file recently. Please\n","\ttry accessing the file again later. If the file you are trying to\n","\taccess is particularly large or is shared with many people, it may\n","\ttake up to 24 hours to be able to view or download the file. If you\n","\tstill can't access a file after 24 hours, contact your domain\n","\tadministrator. \n","\n","You may still be able to access the file from the browser:\n","\n","\t https://drive.google.com/uc?id=1EamxQYrDhAkFHtEQqWPb-00FC5XkAD-n \n","\n"]}],"source":["!gdown 1EamxQYrDhAkFHtEQqWPb-00FC5XkAD-n"]},{"cell_type":"code","source":["!unzip CarTruck.zip"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vOXIRxGti8lU","executionInfo":{"status":"ok","timestamp":1695447604858,"user_tz":-420,"elapsed":4,"user":{"displayName":"002 ฟากิฮ ราแดง","userId":"15758045503554527751"}},"outputId":"75242aad-cddc-400f-ded7-b52044765bbe"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["unzip:  cannot find or open CarTruck.zip, CarTruck.zip.zip or CarTruck.zip.ZIP.\n"]}]},{"cell_type":"code","source":["# Imports\n","import os, warnings\n","\n","import numpy as np\n","import tensorflow as tf\n","from tensorflow.keras.preprocessing import image_dataset_from_directory\n","\n","# Reproducability\n","def set_seed(seed=31415):\n","    np.random.seed(seed)\n","    tf.random.set_seed(seed)\n","    os.environ['PYTHONHASHSEED'] = str(seed)\n","    os.environ['TF_DETERMINISTIC_OPS'] = '1'\n","set_seed(31415)\n","\n","\n","# Load training and validation sets\n","ds_train_ = image_dataset_from_directory(\n","    'CarTruck/train',\n","    labels='inferred',\n","    label_mode='binary',\n","    image_size=[128, 128],\n","    interpolation='nearest',\n","    batch_size=64,\n","    shuffle=True,\n","    #validation_split=0.3;\n","    #subset='training',\n","    #seed=1\n",")\n","ds_valid_ = image_dataset_from_directory(\n","    'CarTruck/val',\n","    labels='inferred',\n","    label_mode='binary',\n","    image_size=[128, 128],\n","    interpolation='nearest',\n","    batch_size=64,\n","    shuffle=True,\n","    #validation_split=0.3;\n","    #subset='training',\n","    #seed=1\n",")\n","ds_test_ = image_dataset_from_directory(\n","    'CarTruck/test',\n","    labels='inferred',\n","    label_mode='binary',\n","    image_size=[128, 128],\n","    interpolation='nearest',\n","    batch_size=64,\n","    shuffle=True,\n","    #validation_split=0.3;\n","    #subset='training',\n","    #seed=1\n",")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":392},"id":"wEcggciRk3T0","executionInfo":{"status":"error","timestamp":1695447616644,"user_tz":-420,"elapsed":593,"user":{"displayName":"002 ฟากิฮ ราแดง","userId":"15758045503554527751"}},"outputId":"ec1a4440-abf1-43c0-8b59-fea80bc112e6"},"execution_count":null,"outputs":[{"output_type":"error","ename":"NotFoundError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNotFoundError\u001b[0m                             Traceback (most recent call last)","\u001b[0;32m<ipython-input-4-0bcae34dd083>\u001b[0m in \u001b[0;36m<cell line: 18>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     16\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     17\u001b[0m \u001b[0;31m# Load training and validation sets\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 18\u001b[0;31m ds_train_ = image_dataset_from_directory(\n\u001b[0m\u001b[1;32m     19\u001b[0m     \u001b[0;34m'CarTruck/train'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     20\u001b[0m     \u001b[0mlabels\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'inferred'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/keras/src/utils/image_dataset.py\u001b[0m in \u001b[0;36mimage_dataset_from_directory\u001b[0;34m(directory, labels, label_mode, class_names, color_mode, batch_size, image_size, shuffle, seed, validation_split, subset, interpolation, follow_links, crop_to_aspect_ratio, **kwargs)\u001b[0m\n\u001b[1;32m    208\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mseed\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    209\u001b[0m         \u001b[0mseed\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrandom\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrandint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1e6\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 210\u001b[0;31m     image_paths, labels, class_names = dataset_utils.index_directory(\n\u001b[0m\u001b[1;32m    211\u001b[0m         \u001b[0mdirectory\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    212\u001b[0m         \u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/keras/src/utils/dataset_utils.py\u001b[0m in \u001b[0;36mindex_directory\u001b[0;34m(directory, labels, formats, class_names, shuffle, seed, follow_links)\u001b[0m\n\u001b[1;32m    540\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    541\u001b[0m         \u001b[0msubdirs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 542\u001b[0;31m         \u001b[0;32mfor\u001b[0m \u001b[0msubdir\u001b[0m \u001b[0;32min\u001b[0m \u001b[0msorted\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mio\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgfile\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlistdir\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdirectory\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    543\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mtf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mio\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgfile\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0misdir\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mio\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgfile\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mjoin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdirectory\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msubdir\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    544\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0msubdir\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mendswith\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"/\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tensorflow/python/lib/io/file_io.py\u001b[0m in \u001b[0;36mlist_directory_v2\u001b[0;34m(path)\u001b[0m\n\u001b[1;32m    766\u001b[0m   \"\"\"\n\u001b[1;32m    767\u001b[0m   \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mis_directory\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 768\u001b[0;31m     raise errors.NotFoundError(\n\u001b[0m\u001b[1;32m    769\u001b[0m         \u001b[0mnode_def\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    770\u001b[0m         \u001b[0mop\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNotFoundError\u001b[0m: Could not find directory CarTruck/train"]}]},{"cell_type":"code","source":["def convert_to_float(image, label):\n","    image = tf.image.convert_image_dtype(image, dtype=tf.float32)\n","    return image, label\n","\n","AUTOTUNE = tf.data.experimental.AUTOTUNE\n","ds_train = (\n","    ds_train_\n","    .map(convert_to_float)\n","    .cache()\n","    .prefetch(buffer_size=AUTOTUNE)\n",")\n","ds_valid = (\n","    ds_valid_\n","    .map(convert_to_float)\n","    .cache()\n","    .prefetch(buffer_size=AUTOTUNE)\n",")\n","ds_test= (\n","    ds_test_\n","    .map(convert_to_float)\n","    .cache()\n","    .prefetch(buffer_size=AUTOTUNE)\n",")"],"metadata":{"id":"P3cpDxi-nXXC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from tensorflow import keras\n","from tensorflow.keras import layers\n","\n","model = keras.Sequential([\n","\n","    #CNN\n","    layers.Conv2D(filters=32, kernel_size=3,activation='relu'), # activation is None\n","    layers.MaxPooling2D(),\n","    layers.Conv2D(filters=64, kernel_size=3,activation='relu'), # activation is None\n","    layers.MaxPooling2D(),\n","    layers.Conv2D(filters=128, kernel_size=3,activation='relu'), # activation is None\n","    layers.MaxPooling2D(),\n","    layers.Conv2D(filters=256, kernel_size=3,activation='relu'), # activation is None\n","    layers.MaxPooling2D(),\n","\n","    #Classification\n","    layers.Flatten(),\n","    layers.Dense(6, activation='relu'),\n","    layers.Dense(1, activation='sigmoid'),\n","])"],"metadata":{"id":"vDWjAW69oIAz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model.compile(\n","    optimizer='adam',\n","    loss='binary_crossentropy',\n","    metrics=['binary_accuracy'],\n",")\n","\n","history = model.fit(\n","    ds_train,\n","    validation_data=ds_valid,\n","    epochs=5,\n","    verbose=1,\n",")"],"metadata":{"id":"o_K_pvItqZdS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","\n","history_frame = pd.DataFrame(history.history)\n","history_frame.loc[:, ['loss', 'val_loss']].plot()\n","history_frame.loc[:, ['binary_accuracy', 'val_binary_accuracy']].plot();"],"metadata":{"id":"gUsM0G1xqcmo"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from tensorflow.keras.applications.vgg16 import VGG16\n","\n","pretrained_base = VGG16(include_top=False,weights='imagenet',input_shape=(356,536,3))\n","pretrained_base.trainable = False"],"metadata":{"id":"fbZHyHR8s4JR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["callbacks = [\n","\n","    tf.keras.callbacks.ModelCheckpoint(\n","        './Models/CheckPoint/CarTruckMobile.ckpt',\n","        monitor='val_binary_accuracy',\n","        save_best_only=True,\n","        save_weights_only=True,\n","        verbose=1,\n","\n","    ),\n","\n","]"],"metadata":{"id":"l0bKiOM2xMDe"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from tensorflow import keras\n","from tensorflow.keras import layers\n","\n","model2 = keras.Sequential([\n","    # Pretrained Model (Base)\n","    pretrained_base,\n","\n","    #Classification\n","    layers.Flatten(),\n","    layers.Dense(6, activation='relu'),\n","    layers.Dense(1, activation='sigmoid'),\n","])"],"metadata":{"id":"7KXpyjSpuEU_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model2.compile(\n","    optimizer='adam',\n","    loss='binary_crossentropy',\n","    metrics=['binary_accuracy'],\n",")\n","\n","history2 = model2.fit(\n","    ds_train,\n","    validation_data=ds_valid,\n","    callbacks=callbacks,\n","    epochs=5,\n","    verbose=1,\n",")"],"metadata":{"id":"tLXyTyKquuX4"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#Save Model (Full)"],"metadata":{"id":"Y394o40F07u9"}},{"cell_type":"code","source":["model2.save('./Models/my_model.keras')"],"metadata":{"id":"AKA6kcWZ1DMm"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#Plot"],"metadata":{"id":"_vyTNSFD14u0"}},{"cell_type":"code","source":["import pandas as pd\n","\n","history_frame = pd.DataFrame(history.history)\n","history_frame.loc[:, ['loss', 'val_loss']].plot()\n","history_frame.loc[:, ['binary_accuracy', 'val_binary_accuracy']].plot();"],"metadata":{"id":"PiY6I4peu6Tf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["test_loss, test_acc = model2.evaluate(ds_test)\n","print(f\"Test accuracy: {test_acc:.3f}\")\n","print(f\"Test loss: {test_loss:.3f}\")"],"metadata":{"id":"K4HkB5UHw1oP"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#Load Weight"],"metadata":{"id":"Zl9ArO1_2FSF"}},{"cell_type":"code","source":["from tensorflow.keras.applications.vgg16 import VGG16\n","\n","pretrained_base = VGG16(include_top=False,weights='imagenet',input_shape=(128,128,3))\n","pretrained_base.trainable = False\n","\n","from tensorflow import keras\n","from tensorflow.keras import layers\n","\n","model_weight = keras.Sequential([\n","    pretrained_base,\n","    layers.Flatten(),\n","    layers.Dense(6, activation='relu'),\n","    layers.Dense(1, activation='sigmoid'),\n","])\n","\n","\n","model_weight.compile(\n","    optimizer='adam',\n","    loss='binary_crossentropy',\n","    metrics=['binary_accuracy'],\n",")\n"],"metadata":{"id":"dIVehBcJyH63"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["test_loss, test_acc = model_weight.evaluate(ds_test)\n","print(f\"Test accuracy: {test_acc:.3f}\")\n","print(f\"Test loss: {test_loss:.3f}\")"],"metadata":{"id":"9k63N3hGyKzf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Loads the weights\n","model_weight.load_weights('./Models/CheckPoint/CarTruckMobile.ckpt')"],"metadata":{"id":"yD8xv766ycjm"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#Load Model(Full)"],"metadata":{"id":"PMqrYf3E2L20"}},{"cell_type":"code","source":["import tensorflow as tf\n","\n","new_model = tf.keras.models.load_model('./Models/my_model.keras')"],"metadata":{"id":"FTH8X5Zs2RdU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["test_loss, test_acc = new_model.evaluate(ds_test)\n","print(f\"Test accuracy: {test_acc:.3f}\")\n","print(f\"Test loss: {test_loss:.3f}\")"],"metadata":{"id":"UQWS8Dum2Wb0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["converter = tf.lite.TFLiteConverter.from_keras_model(model2)\n","tflite_model = converter.convert()\n","\n","# Save the TensorFlow Lite model file.\n","with open('./Models/my_model.tflite', \"wb\") as f:\n","  f.write(tflite_model)"],"metadata":{"id":"arwQXst53hOs"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Data Augmentation"],"metadata":{"id":"a5xxkzZjhw72"}},{"cell_type":"code","source":["from tensorflow import keras\n","from tensorflow.keras import layers\n","from tensorflow.keras.layers.experimental import preprocessing\n","\n","model_aug = keras.Sequential([\n","\n","    # # Data Augmentation\n","    layers.RandomFlip('horizontal'), # flip left-to-right\n","    layers.RandomRotation(0.2,fill_mode='nearest'),\n","    layers.RandomZoom(0.2),\n","    layers.RandomBrightness(factor=0.1, value_range=(0, 5.0)),\n","\n","    # Pretrained Model (Base)\n","    # pretrained_base,\n","\n","    #CNN\n","    layers.Conv2D(filters=32, kernel_size=3,activation='relu'), # activation is None\n","    layers.MaxPooling2D(),\n","    layers.Conv2D(filters=64, kernel_size=3,activation='relu'), # activation is None\n","    layers.MaxPooling2D(),\n","    layers.Conv2D(filters=128, kernel_size=3,activation='relu'), # activation is None\n","    layers.MaxPooling2D(),\n","    layers.Conv2D(filters=256, kernel_size=3,activation='relu'), # activation is None\n","    layers.MaxPooling2D(),\n","\n","    #Classification\n","    layers.Flatten(),\n","    layers.Dense(512, activation='relu'),\n","    layers.Dense(1, activation='sigmoid'),\n","])"],"metadata":{"id":"IrJuHR_xh4HE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model_aug.compile(\n","    optimizer='adam',\n","    loss='binary_crossentropy',\n","    metrics=['binary_accuracy'],\n",")\n","\n","history_aug = model_aug.fit(\n","    ds_train,\n","    validation_data=ds_valid,\n","    callbacks=callbacks,\n","    epochs=5,\n","    verbose=1,\n",")"],"metadata":{"id":"07FBPCapiYRV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","\n","history_frame = pd.DataFrame(history_aug.history)\n","history_frame.loc[:, ['loss', 'val_loss']].plot()\n","history_frame.loc[:, ['binary_accuracy', 'val_binary_accuracy']].plot();"],"metadata":{"id":"M6C84VZtnIm_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["test_loss, test_acc = model_aug.evaluate(ds_test)\n","print(f\"Test accuracy: {test_acc:.3f}\")\n","print(f\"Test loss: {test_loss:.3f}\")"],"metadata":{"id":"CHDmzJ01nyiX"},"execution_count":null,"outputs":[]}]}